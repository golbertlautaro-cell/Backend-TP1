version: '3.8'

services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:16-alpine
    container_name: tpi-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: tpi_logistica
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - tpi-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Microservicio de Log√≠stica
  ms-logistica:
    build:
      context: ./ms-logistica
      dockerfile: Dockerfile
    container_name: ms-logistica
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/logistica_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
    ports:
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - tpi-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8081/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Microservicio de Solicitudes
  ms-solicitudes:
    build:
      context: ./ms-solicitudes
      dockerfile: Dockerfile
    container_name: ms-solicitudes
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/solicitudes_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
      MS_LOGISTICA_URL: http://ms-logistica:8081
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      ms-logistica:
        condition: service_healthy
    networks:
      - tpi-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  tpi-network:
    driver: bridge

volumes:
  postgres_data:
